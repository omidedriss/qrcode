{"ast":null,"code":"export default {\n  name: \"LocationTab\",\n  props: {\n    getsection: {\n      type: String,\n      default: \"\"\n    },\n    settings: {\n      type: Object,\n      required: true,\n      default: () => ({\n        location: false,\n        google_api_key: \"\",\n        lat: 0,\n        lng: 0\n      })\n    }\n  },\n  data() {\n    return {\n      searchAddress: \"\",\n      latitude: null,\n      longitude: null\n    };\n  },\n  computed: {\n    isLocationEnabled() {\n      console.log(\"isLocationEnabled:\", this.settings.location);\n      return this.settings.location === true;\n    },\n    isGoogleApiKeyValid() {\n      const key = this.settings.google_api_key;\n      console.log(\"isGoogleApiKeyValid:\", {\n        key,\n        valid: key && key !== \"YOUR-API-KEY\" && key.length >= 10\n      });\n      return key && key !== \"YOUR-API-KEY\" && key.length >= 10;\n    },\n    settingsLat() {\n      console.log(\"settingsLat:\", this.settings.lat || 0);\n      return this.settings.lat || 0;\n    },\n    settingsLng() {\n      console.log(\"settingsLng:\", this.settings.lng || 0);\n      return this.settings.lng || 0;\n    }\n  },\n  mounted() {\n    console.log(\"LocationTab mounted, activeSection:\", this.activeSection);\n    if (this.isGoogleApiKeyValid) {\n      this.loadGoogleMapsScript();\n    } else {\n      this.loadOpenLayersScript();\n    }\n  },\n  methods: {\n    loadGoogleMapsScript() {\n      if (!window.google || !window.google.maps) {\n        const script = document.createElement(\"script\");\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${this.settings.google_api_key}&libraries=places`;\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          console.log(\"Google Maps script loaded\");\n          this.initializeGoogleMap();\n        };\n        script.onerror = () => {\n          console.error(\"Failed to load Google Maps script\");\n        };\n        document.head.appendChild(script);\n      } else {\n        this.initializeGoogleMap();\n      }\n    },\n    loadOpenLayersScript() {\n      if (!window.ol) {\n        const script = document.createElement(\"script\");\n        script.src = \"/ol/ol.js\"; // Assumes ol.js is in public/ol/ol.js\n        script.async = true;\n        script.onload = () => {\n          console.log(\"OpenLayers script loaded\");\n          this.initializeOpenLayersMap();\n        };\n        script.onerror = () => {\n          console.error(\"Failed to load OpenLayers script. Ensure ol.js is in public/ol/ol.js or use a CDN: https://cdn.jsdelivr.net/npm/ol@9.2.4/dist/ol.js\");\n        };\n        document.head.appendChild(script);\n      } else {\n        this.initializeOpenLayersMap();\n      }\n    },\n    initializeGoogleMap() {\n      const mapElement = document.getElementById(\"map-canvas\");\n      if (!mapElement) {\n        console.error(\"Google Map container not found\");\n        return;\n      }\n      const map = new window.google.maps.Map(mapElement, {\n        center: {\n          lat: this.settingsLat,\n          lng: this.settingsLng\n        },\n        zoom: 8\n      });\n      console.log(map, \"map\");\n      console.log(\"Google Map initialized at:\", {\n        lat: this.settingsLat,\n        lng: this.settingsLng\n      });\n    },\n    initializeOpenLayersMap() {\n      const mapElement = document.getElementById(\"wpol-admin-map\");\n      if (!mapElement) {\n        console.error(\"OpenLayers map container not found\");\n        return;\n      }\n      const map = new window.ol.Map({\n        target: \"wpol-admin-map\",\n        layers: [new window.ol.layer.Tile({\n          source: new window.ol.source.OSM()\n        })],\n        view: new window.ol.View({\n          center: window.ol.proj.fromLonLat([this.settingsLng, this.settingsLat]),\n          zoom: 8\n        })\n      });\n      console.log(map, \"map\");\n      console.log(\"OpenLayers map initialized at:\", {\n        lat: this.settingsLat,\n        lng: this.settingsLng\n      });\n    },\n    searchCoordinates() {\n      console.log(\"Search button clicked, address:\", this.searchAddress);\n      // Implement search logic here (e.g., geocode address and update latitude/longitude)\n    }\n  }\n};","map":{"version":3,"names":["name","props","getsection","type","String","default","settings","Object","required","location","google_api_key","lat","lng","data","searchAddress","latitude","longitude","computed","isLocationEnabled","console","log","isGoogleApiKeyValid","key","valid","length","settingsLat","settingsLng","mounted","activeSection","loadGoogleMapsScript","loadOpenLayersScript","methods","window","google","maps","script","document","createElement","src","async","defer","onload","initializeGoogleMap","onerror","error","head","appendChild","ol","initializeOpenLayersMap","mapElement","getElementById","map","Map","center","zoom","target","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","searchCoordinates"],"sources":["src/components/LocationTab.vue"],"sourcesContent":["<template>\r\n  <div\r\n    value=\"location\"\r\n    class=\"location-tab fadeIn\"\r\n    v-if=\"getsection === '#location'\"\r\n    id=\"location\"\r\n  >\r\n    <p class=\"rtl-label tag\">{{ $t(\"buttons.location\") }}</p>\r\n\r\n    <!-- OpenLayers Map (used when Google API key is invalid) -->\r\n    <template v-if=\"!isGoogleApiKeyValid\">\r\n      <v-card-text>\r\n        <small>{{ $t(\"googlevalid\") }}</small>\r\n        <v-row>\r\n          <v-col md=\"6\" cols=\"12\" class=\"mb-1\">\r\n            <v-text-field\r\n              v-model=\"searchAddress\"\r\n              :label=\"$t('search')\"\r\n              class=\"venomaps-set-address nopreview\"\r\n              outlined\r\n              dense\r\n              append-outer-icon=\"mdi-magnify\"\r\n              @click:append-outer=\"searchCoordinates\"\r\n            />\r\n          </v-col>\r\n          <v-col md=\"3\" cols=\"12\">\r\n            <v-text-field\r\n              v-model.number=\"latitude\"\r\n              :label=\"$t('latitude')\"\r\n              type=\"number\"\r\n              class=\"venomaps-get-lat setinput-latlon no-validate\"\r\n              step=\"0.001\"\r\n              outlined\r\n              dense\r\n            />\r\n          </v-col>\r\n          <v-col md=\"3\" cols=\"12\">\r\n            <v-text-field\r\n              v-model.number=\"longitude\"\r\n              :label=\"$t('longitude')\"\r\n              type=\"number\"\r\n              class=\"venomaps-get-lon setinput-latlon no-validate\"\r\n              step=\"0.001\"\r\n              outlined\r\n              dense\r\n            />\r\n          </v-col>\r\n        </v-row>\r\n        <div class=\"form-group\">\r\n          <div\r\n            id=\"wpol-admin-map\"\r\n            :data-lat=\"settingsLat\"\r\n            :data-lng=\"settingsLng\"\r\n            class=\"venomap\"\r\n          ></div>\r\n          <div style=\"display: none\">\r\n            <div class=\"wpol-infomarker\" id=\"infomarker_admin\"></div>\r\n          </div>\r\n        </div>\r\n      </v-card-text>\r\n    </template>\r\n\r\n    <!-- Google Maps (used when Google API key is valid) -->\r\n    <template v-else>\r\n      <v-card-text>\r\n        <div style=\"min-height: 350px\" class=\"mb-3\">\r\n          <div id=\"latlong\">\r\n            <v-text-field\r\n              id=\"pac-input\"\r\n              v-model=\"searchAddress\"\r\n              :label=\"$t('search')\"\r\n              class=\"controls nopreview\"\r\n              outlined\r\n              dense\r\n            />\r\n            <v-text-field\r\n              id=\"latbox\"\r\n              v-model.number=\"latitude\"\r\n              :label=\"$t('latitude')\"\r\n              type=\"number\"\r\n              class=\"controls\"\r\n              step=\"0.1\"\r\n              outlined\r\n              dense\r\n            />\r\n            <v-text-field\r\n              id=\"lngbox\"\r\n              v-model.number=\"longitude\"\r\n              :label=\"$t('longitude')\"\r\n              type=\"number\"\r\n              class=\"controls\"\r\n              step=\"0.1\"\r\n              outlined\r\n              dense\r\n            />\r\n          </div>\r\n          <div\r\n            id=\"map-canvas\"\r\n            :data-lat=\"settingsLat\"\r\n            :data-lng=\"settingsLng\"\r\n          ></div>\r\n        </div>\r\n      </v-card-text>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"LocationTab\",\r\n  props: {\r\n    getsection: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    settings: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => ({\r\n        location: false,\r\n        google_api_key: \"\",\r\n        lat: 0,\r\n        lng: 0,\r\n      }),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      searchAddress: \"\",\r\n      latitude: null,\r\n      longitude: null,\r\n    };\r\n  },\r\n  computed: {\r\n    isLocationEnabled() {\r\n      console.log(\"isLocationEnabled:\", this.settings.location);\r\n      return this.settings.location === true;\r\n    },\r\n    isGoogleApiKeyValid() {\r\n      const key = this.settings.google_api_key;\r\n      console.log(\"isGoogleApiKeyValid:\", {\r\n        key,\r\n        valid: key && key !== \"YOUR-API-KEY\" && key.length >= 10,\r\n      });\r\n      return key && key !== \"YOUR-API-KEY\" && key.length >= 10;\r\n    },\r\n    settingsLat() {\r\n      console.log(\"settingsLat:\", this.settings.lat || 0);\r\n      return this.settings.lat || 0;\r\n    },\r\n    settingsLng() {\r\n      console.log(\"settingsLng:\", this.settings.lng || 0);\r\n      return this.settings.lng || 0;\r\n    },\r\n  },\r\n  mounted() {\r\n    console.log(\"LocationTab mounted, activeSection:\", this.activeSection);\r\n    if (this.isGoogleApiKeyValid) {\r\n      this.loadGoogleMapsScript();\r\n    } else {\r\n      this.loadOpenLayersScript();\r\n    }\r\n  },\r\n  methods: {\r\n    loadGoogleMapsScript() {\r\n      if (!window.google || !window.google.maps) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${this.settings.google_api_key}&libraries=places`;\r\n        script.async = true;\r\n        script.defer = true;\r\n        script.onload = () => {\r\n          console.log(\"Google Maps script loaded\");\r\n          this.initializeGoogleMap();\r\n        };\r\n        script.onerror = () => {\r\n          console.error(\"Failed to load Google Maps script\");\r\n        };\r\n        document.head.appendChild(script);\r\n      } else {\r\n        this.initializeGoogleMap();\r\n      }\r\n    },\r\n    loadOpenLayersScript() {\r\n      if (!window.ol) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"/ol/ol.js\"; // Assumes ol.js is in public/ol/ol.js\r\n        script.async = true;\r\n        script.onload = () => {\r\n          console.log(\"OpenLayers script loaded\");\r\n          this.initializeOpenLayersMap();\r\n        };\r\n        script.onerror = () => {\r\n          console.error(\r\n            \"Failed to load OpenLayers script. Ensure ol.js is in public/ol/ol.js or use a CDN: https://cdn.jsdelivr.net/npm/ol@9.2.4/dist/ol.js\"\r\n          );\r\n        };\r\n        document.head.appendChild(script);\r\n      } else {\r\n        this.initializeOpenLayersMap();\r\n      }\r\n    },\r\n    initializeGoogleMap() {\r\n      const mapElement = document.getElementById(\"map-canvas\");\r\n      if (!mapElement) {\r\n        console.error(\"Google Map container not found\");\r\n        return;\r\n      }\r\n      const map = new window.google.maps.Map(mapElement, {\r\n        center: { lat: this.settingsLat, lng: this.settingsLng },\r\n        zoom: 8,\r\n      });\r\n      console.log(map, \"map\");\r\n      console.log(\"Google Map initialized at:\", {\r\n        lat: this.settingsLat,\r\n        lng: this.settingsLng,\r\n      });\r\n    },\r\n    initializeOpenLayersMap() {\r\n      const mapElement = document.getElementById(\"wpol-admin-map\");\r\n      if (!mapElement) {\r\n        console.error(\"OpenLayers map container not found\");\r\n        return;\r\n      }\r\n      const map = new window.ol.Map({\r\n        target: \"wpol-admin-map\",\r\n        layers: [\r\n          new window.ol.layer.Tile({\r\n            source: new window.ol.source.OSM(),\r\n          }),\r\n        ],\r\n        view: new window.ol.View({\r\n          center: window.ol.proj.fromLonLat([\r\n            this.settingsLng,\r\n            this.settingsLat,\r\n          ]),\r\n          zoom: 8,\r\n        }),\r\n      });\r\n      console.log(map, \"map\");\r\n      console.log(\"OpenLayers map initialized at:\", {\r\n        lat: this.settingsLat,\r\n        lng: this.settingsLng,\r\n      });\r\n    },\r\n    searchCoordinates() {\r\n      console.log(\"Search button clicked, address:\", this.searchAddress);\r\n      // Implement search logic here (e.g., geocode address and update latitude/longitude)\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.venomap {\r\n  height: 350px; /* Match min-height from Google Maps div */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}