{"ast":null,"code":"import QrcdrButton from \"./QrcdrButton.vue\";\nimport StaticDetails from \"./StaticDetails.vue\";\nimport { EventBus } from \"./eventBus\";\nexport default {\n  name: \"StaticTab\",\n  components: {\n    QrcdrButton,\n    StaticDetails\n  },\n  props: {\n    settings: {\n      type: Object,\n      required: true,\n      default: () => ({\n        buttons: []\n      }) // Fallback to empty buttons array\n    },\n    selectedButton: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      showDetails: false,\n      selectedNameButton: \"\",\n      showAllButtons: false\n    };\n  },\n  mounted() {\n    console.log(\"StaticTab mounted with settings:\", this.settings);\n    console.log(\"Initial showDetails:\", this.showDetails);\n    console.log(\"Initial selectedNameButton:\", this.selectedNameButton);\n    console.log(\"Initial showAllButtons:\", this.showAllButtons);\n  },\n  computed: {\n    isMobileBreakpoint() {\n      return this.$vuetify.breakpoint.smAndDown;\n    },\n    isXsBreakpoint() {\n      return this.$vuetify.breakpoint.xs;\n    },\n    visibleButtons() {\n      if (!this.settings || !this.settings.buttons) {\n        console.warn(\"settings.buttons is undefined or null\");\n        return [];\n      }\n      if (!this.showAllButtons && this.isMobileBreakpoint) {\n        if (this.isXsBreakpoint) return this.settings.buttons.slice(0, 4);else return this.settings.buttons.slice(0, 6);\n      }\n      return this.settings.buttons;\n    }\n  },\n  methods: {\n    getCols() {\n      if (this.$vuetify.breakpoint.xs) {\n        return 6; // 2 buttons per row\n      } else if (this.$vuetify.breakpoint.sm) {\n        return 4; // 3 buttons per row\n      } else {\n        return 3; // 4 buttons per row\n      }\n    },\n    resetTitle() {\n      EventBus.$emit(\"updateTopTitle\", \"static_qr_title\");\n    },\n    clickbtn(button) {\n      this.$emit(\"button-clicked\", button);\n      this.showDetails = true;\n      this.selectedNameButton = button.value;\n      EventBus.$emit(\"updateTopTitle\", button.text);\n    }\n  }\n};","map":{"version":3,"names":["QrcdrButton","StaticDetails","EventBus","name","components","props","settings","type","Object","required","default","buttons","selectedButton","data","showDetails","selectedNameButton","showAllButtons","mounted","console","log","computed","isMobileBreakpoint","$vuetify","breakpoint","smAndDown","isXsBreakpoint","xs","visibleButtons","warn","slice","methods","getCols","sm","resetTitle","$emit","clickbtn","button","value","text"],"sources":["src/components/StaticTab.vue"],"sourcesContent":["<template>\n  <!-- <div class=\"static-buttons\" v-if=\"!showDetails\"> -->\n  <div class=\"static-buttons-grid\" v-if=\"!showDetails\">\n    <v-row>\n      <v-col\n        v-for=\"button in visibleButtons\"\n        :key=\"button.text\"\n        :cols=\"getCols()\"\n        class=\"button-col\"\n      >\n        <qrcdr-button\n          :icon=\"button.icon\"\n          :text=\"button.text\"\n          :settings=\"settings\"\n          :isDynamic=\"false\"\n          @click=\"clickbtn(button)\"\n          :isMobile=\"isMobileBreakpoint\"\n          :isXs=\"isXsBreakpoint\"\n        ></qrcdr-button>\n      </v-col>\n\n      <!-- Show All/Show Less button for mobile -->\n      <v-col\n        v-if=\"isMobileBreakpoint\"\n        :cols=\"isXsBreakpoint ? getCols() * 2 : getCols() * 3\"\n        class=\"button-col show-all-button-col\"\n      >\n        <qrcdr-button\n          style=\"\n            width: 100%;\n            max-width: 100%;\n            justify-content: center;\n            height: 53px !important;\n          \"\n          :icon=\"showAllButtons ? 'fas fa-compress' : 'fas fa-th-large'\"\n          :text=\"\n            showAllButtons\n              ? 'dynamicButtons.show_less_static'\n              : 'dynamicButtons.show_all_static'\n          \"\n          :settings=\"settings\"\n          :subtext=\"\n            showAllButtons\n              ? 'dynamicButtons.show_less_subtext'\n              : 'dynamicButtons.show_all_subtext'\n          \"\n          :isDynamic=\"true\"\n          :isMobile=\"true\"\n          :isShowAll=\"true\"\n          :isXs=\"true\"\n          @click=\"showAllButtons = !showAllButtons\"\n        ></qrcdr-button>\n      </v-col>\n    </v-row>\n  </div>\n  <StaticDetails\n    v-else\n    :settings=\"settings\"\n    :nameQr=\"selectedNameButton\"\n    :selected-button=\"selectedButton\"\n    @back-to-static=\"\n      showDetails = false;\n      resetTitle();\n    \"\n  />\n</template>\n\n<script>\nimport QrcdrButton from \"./QrcdrButton.vue\";\nimport StaticDetails from \"./StaticDetails.vue\";\nimport { EventBus } from \"./eventBus\";\n\nexport default {\n  name: \"StaticTab\",\n  components: { QrcdrButton, StaticDetails },\n  props: {\n    settings: {\n      type: Object,\n      required: true,\n      default: () => ({ buttons: [] }), // Fallback to empty buttons array\n    },\n    selectedButton: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  data() {\n    return {\n      showDetails: false,\n      selectedNameButton: \"\",\n      showAllButtons: false,\n    };\n  },\n  mounted() {\n    console.log(\"StaticTab mounted with settings:\", this.settings);\n\n    console.log(\"Initial showDetails:\", this.showDetails);\n    console.log(\"Initial selectedNameButton:\", this.selectedNameButton);\n    console.log(\"Initial showAllButtons:\", this.showAllButtons);\n  },\n  computed: {\n    isMobileBreakpoint() {\n      return this.$vuetify.breakpoint.smAndDown;\n    },\n    isXsBreakpoint() {\n      return this.$vuetify.breakpoint.xs;\n    },\n    visibleButtons() {\n      if (!this.settings || !this.settings.buttons) {\n        console.warn(\"settings.buttons is undefined or null\");\n        return [];\n      }\n      if (!this.showAllButtons && this.isMobileBreakpoint) {\n        if (this.isXsBreakpoint) return this.settings.buttons.slice(0, 4);\n        else return this.settings.buttons.slice(0, 6);\n      }\n      return this.settings.buttons;\n    },\n  },\n  methods: {\n    getCols() {\n      if (this.$vuetify.breakpoint.xs) {\n        return 6; // 2 buttons per row\n      } else if (this.$vuetify.breakpoint.sm) {\n        return 4; // 3 buttons per row\n      } else {\n        return 3; // 4 buttons per row\n      }\n    },\n    resetTitle() {\n      EventBus.$emit(\"updateTopTitle\", \"static_qr_title\");\n    },\n    clickbtn(button) {\n      this.$emit(\"button-clicked\", button);\n      this.showDetails = true;\n      this.selectedNameButton = button.value;\n      EventBus.$emit(\"updateTopTitle\", button.text);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.static-buttons {\n  flex-direction: row;\n  flex-wrap: wrap;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  row-gap: 85px;\n  column-gap: 95px;\n  margin-top: 65px;\n  margin-left: 40px;\n  margin-right: 40px;\n  justify-content: center;\n}\n\n/* Large desktop */\n@media (max-width: 1440px) {\n  .static-buttons {\n    grid-template-columns: repeat(5, 1fr);\n    row-gap: 85px;\n    column-gap: 95px;\n    margin-left: 30px;\n    margin-right: 30px;\n  }\n}\n\n/* Medium desktop */\n@media (max-width: 1200px) {\n  .static-buttons {\n    grid-template-columns: repeat(5, 1fr);\n    row-gap: 85px;\n    column-gap: 95px;\n    margin-left: 25px;\n    margin-right: 25px;\n  }\n}\n\n/* Small desktop */\n@media (max-width: 1024px) {\n  .static-buttons {\n    grid-template-columns: repeat(5, 1fr);\n    row-gap: 88px;\n    column-gap: 98px;\n    margin-left: 0px;\n    margin-right: 0px;\n  }\n}\n\n/* Tablet */\n@media (max-width: 768px) {\n  .static-buttons {\n    grid-template-columns: repeat(4, 1fr);\n    row-gap: 58px;\n    column-gap: 46px;\n    margin-top: 0px;\n    margin-left: 0px;\n    margin-right: 0px;\n    justify-content: center;\n  }\n}\n\n/* Large mobile */\n@media (max-width: 480px) {\n  .static-buttons {\n    grid-template-columns: repeat(4, 1fr);\n    row-gap: 48px;\n    column-gap: 36px;\n    margin-top: 0px;\n    margin-left: 0px;\n    margin-right: 0px;\n  }\n}\n\n/* Medium mobile */\n@media (max-width: 425px) {\n  .static-buttons {\n    grid-template-columns: repeat(3, 1fr);\n    row-gap: 38px;\n    column-gap: 28px;\n    margin-top: 0px;\n    margin-left: 0px;\n    margin-right: 0px;\n  }\n}\n\n/* Small mobile */\n@media (max-width: 360px) {\n  .static-buttons {\n    grid-template-columns: repeat(2, 1fr);\n    row-gap: 58px;\n    column-gap: 46px;\n    margin-left: 0px;\n    margin-right: 0px;\n    margin-top: 0px;\n  }\n}\n.static-buttons-grid {\n  width: 100%;\n  padding: 20px;\n  justify-content: center !important;\n  align-items: center !important;\n}\n\n.button-col {\n  display: flex;\n  justify-content: center !important;\n  align-items: center !important;\n  padding-right: 10px;\n  padding-left: 10px;\n}\n\n.show-all-button-col {\n  flex: 0 0 auto; /* Prevent shrinking */\n  width: 80%; /* Take full width */\n  margin-left: 10%;\n  margin-right: 10%;\n}\n</style>\n"],"mappings":"AAoEA,OAAAA,WAAA;AACA,OAAAC,aAAA;AACA,SAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAJ,WAAA;IAAAC;EAAA;EACAI,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;MACAC,OAAA,EAAAA,CAAA;QAAAC,OAAA;MAAA;IACA;IACAC,cAAA;MACAL,IAAA,EAAAC,MAAA;MACAE,OAAA,EAAAA,CAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,WAAA;MACAC,kBAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA,0CAAAb,QAAA;IAEAY,OAAA,CAAAC,GAAA,8BAAAL,WAAA;IACAI,OAAA,CAAAC,GAAA,qCAAAJ,kBAAA;IACAG,OAAA,CAAAC,GAAA,iCAAAH,cAAA;EACA;EACAI,QAAA;IACAC,mBAAA;MACA,YAAAC,QAAA,CAAAC,UAAA,CAAAC,SAAA;IACA;IACAC,eAAA;MACA,YAAAH,QAAA,CAAAC,UAAA,CAAAG,EAAA;IACA;IACAC,eAAA;MACA,UAAArB,QAAA,UAAAA,QAAA,CAAAK,OAAA;QACAO,OAAA,CAAAU,IAAA;QACA;MACA;MACA,UAAAZ,cAAA,SAAAK,kBAAA;QACA,SAAAI,cAAA,cAAAnB,QAAA,CAAAK,OAAA,CAAAkB,KAAA,YACA,YAAAvB,QAAA,CAAAK,OAAA,CAAAkB,KAAA;MACA;MACA,YAAAvB,QAAA,CAAAK,OAAA;IACA;EACA;EACAmB,OAAA;IACAC,QAAA;MACA,SAAAT,QAAA,CAAAC,UAAA,CAAAG,EAAA;QACA;MACA,gBAAAJ,QAAA,CAAAC,UAAA,CAAAS,EAAA;QACA;MACA;QACA;MACA;IACA;IACAC,WAAA;MACA/B,QAAA,CAAAgC,KAAA;IACA;IACAC,SAAAC,MAAA;MACA,KAAAF,KAAA,mBAAAE,MAAA;MACA,KAAAtB,WAAA;MACA,KAAAC,kBAAA,GAAAqB,MAAA,CAAAC,KAAA;MACAnC,QAAA,CAAAgC,KAAA,mBAAAE,MAAA,CAAAE,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}