{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport QrcdrButton from \"./QrcdrButton.vue\";\nimport { EventBus } from \"./eventBus\";\nconst __default__ = {\n  name: \"DynamicTab\",\n  props: {\n    settings: {\n      type: Object,\n      required: true,\n      default: () => ({\n        dynamicButtons: [],\n        defaultImage: \"https://via.placeholder.com/150\",\n        defaultDoc: \"\",\n        frameImage: \"img/cell.png\"\n      })\n    }\n  },\n  components: {\n    QrcdrButton\n  },\n  data() {\n    return {\n      frameImage: \"img/cell.png\",\n      dynamicButtons: [],\n      showDetailsPanel: false,\n      selectedButton: {},\n      sheet: false,\n      showAllDynamicButtons: false\n    };\n  },\n  computed: {\n    isMobileBreakpoint() {\n      // Enable show all button for 768px to 960px as well\n      return this.$vuetify.breakpoint.smAndDown || this.$vuetify.breakpoint.md && this.$vuetify.breakpoint.width <= 960;\n    },\n    isXsBreakpoint() {\n      return this.$vuetify.breakpoint.xs;\n    },\n    visibleDynamicButtons() {\n      if (!this.dynamicButtons || !Array.isArray(this.dynamicButtons)) {\n        console.warn(\"dynamicButtons is not defined or not an array\");\n        return [];\n      }\n      console.log(\"isXsBreakpoint:\", this.isXsBreakpoint, \"showAllDynamicButtons:\", this.showAllDynamicButtons, \"dynamicButtons:\", this.dynamicButtons);\n      if (!this.showAllDynamicButtons && this.isMobileBreakpoint) {\n        if (this.isXsBreakpoint) return this.dynamicButtons.slice(0, 4);else return this.dynamicButtons.slice(0, 6);\n      }\n      return this.dynamicButtons;\n    }\n  },\n  watch: {\n    \"settings.dynamicButtons\": {\n      handler(newButtons) {\n        this.dynamicButtons = newButtons.map(button => ({\n          ...button,\n          image: button.image || this.settings.defaultImage || \"https://via.placeholder.com/150\",\n          doc: button.doc || this.settings.defaultDoc || this.$t(\"defaultDoc\"),\n          frameImage: button.frameImage || this.settings.frameImage,\n          subtext: button.subtext || this.$t(\"defaultSubtext\"),\n          link1: button.link1 || \"\",\n          link2: button.link2 || \"#\"\n        }));\n      },\n      immediate: true,\n      deep: true\n    },\n    \"$vuetify.breakpoint.smOnly\"(isMobile) {\n      if (!isMobile) {\n        this.sheet = false;\n        this.showDetailsPanel = true;\n      }\n    },\n    \"$vuetify.breakpoint.xsOnly\"(isMobile) {\n      if (!isMobile) {\n        this.sheet = false;\n        this.showDetailsPanel = true;\n      }\n    }\n  },\n  methods: {\n    getCols() {\n      if (this.$vuetify.breakpoint.xs) {\n        return 6; // 2 buttons per row\n      } else if (this.$vuetify.breakpoint.sm) {\n        return 4; // 3 buttons per row\n      } else {\n        return 3; // 4 buttons per row\n      }\n    },\n    toggleShowAll() {\n      this.showAllDynamicButtons = !this.showAllDynamicButtons;\n      console.log(\"Toggled showAllDynamicButtons to:\", this.showAllDynamicButtons);\n    },\n    showDetails(button) {\n      this.selectedButton = button;\n      this.showDetailsPanel = false;\n      EventBus.$emit(\"updateTopTitle\", this.selectedButton.text);\n      if (this.$vuetify.breakpoint.smAndDown) {\n        this.sheet = true; // Open v-bottom-sheet for mobile\n        this.showDetailsPanel = true; // If details-panel is also shown\n\n        this.$nextTick(() => {\n          const image = this.$refs.templatePhone;\n          if (image) {\n            // Get phone-frame position\n            const rect = image.getBoundingClientRect();\n            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n            const targetY = rect.top + scrollTop + rect.height + 10; // 10 pixels below the end of phone-frame\n            window.scrollTo({\n              top: targetY,\n              behavior: \"smooth\"\n            });\n          }\n        });\n      } else {\n        this.showDetailsPanel = true;\n        const createButton = this.$refs.createButton;\n        if (createButton) {\n          createButton.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"nearest\"\n          });\n        }\n      }\n    },\n    formatDoc(doc) {\n      if (!doc) return \"\";\n      return doc.replace(/\\n/g, \"<br>\").replace(/\\n+/g, \" \").trim();\n    },\n    createAction() {\n      if (this.selectedButton.link1) {\n        window.location.href = this.selectedButton.link1;\n      }\n    },\n    createAction2() {\n      if (this.selectedButton.link2) {\n        this.$router.push({\n          path: this.selectedButton.link2\n        });\n      }\n    }\n  }\n};\nimport { useCssVars as _useCssVars } from 'vue';\nconst __injectCSSVars__ = () => {\n  _useCssVars((_vm, _setup) => ({\n    \"6ac24a06-settings_topBgColor\": _vm.settings.topBgColor\n  }));\n};\nconst __setup__ = __default__.setup;\n__default__.setup = __setup__ ? (props, ctx) => {\n  __injectCSSVars__();\n  return __setup__(props, ctx);\n} : __injectCSSVars__;\nexport default __default__;","map":{"version":3,"names":["QrcdrButton","EventBus","__default__","name","props","settings","type","Object","required","default","dynamicButtons","defaultImage","defaultDoc","frameImage","components","data","showDetailsPanel","selectedButton","sheet","showAllDynamicButtons","computed","isMobileBreakpoint","$vuetify","breakpoint","smAndDown","md","width","isXsBreakpoint","xs","visibleDynamicButtons","Array","isArray","console","warn","log","slice","watch","handler","newButtons","map","button","image","doc","$t","subtext","link1","link2","immediate","deep","$vuetify.breakpoint.smOnly","isMobile","$vuetify.breakpoint.xsOnly","methods","getCols","sm","toggleShowAll","showDetails","$emit","text","$nextTick","$refs","templatePhone","rect","getBoundingClientRect","scrollTop","window","pageYOffset","document","documentElement","targetY","top","height","scrollTo","behavior","createButton","scrollIntoView","block","inline","formatDoc","replace","trim","createAction","location","href","createAction2","$router","push","path"],"sources":["src/components/DynamicTab.vue"],"sourcesContent":["<template>\n  <div class=\"dynamic-tab\">\n    <div class=\"content-wrapper\">\n      <!-- Dynamic Buttons Grid using Vuetify v-row and v-col -->\n      <div class=\"dynamic-buttons-grid\">\n        <v-row>\n          <v-col\n            v-for=\"button in visibleDynamicButtons\"\n            :key=\"button.text\"\n            :cols=\"getCols()\"\n            class=\"button-col\"\n          >\n            <qrcdr-button\n              :icon=\"button.icon\"\n              :text=\"button.text\"\n              :settings=\"settings\"\n              :subtext=\"button.subtext\"\n              :isDynamic=\"true\"\n              :isMobile=\"isMobileBreakpoint\"\n              :isXs=\"isXsBreakpoint\"\n              @click=\"showDetails(button)\"\n            ></qrcdr-button>\n          </v-col>\n\n          <!-- Show All/Show Less button for mobile -->\n          <v-col\n            v-if=\"isMobileBreakpoint\"\n            :cols=\"isXsBreakpoint ? getCols() * 2 : getCols() * 3\"\n            class=\"button-col-showall show-all-button-col\"\n          >\n            <qrcdr-button\n              style=\"width: 100%; max-width: 100%; height: 53px\"\n              :icon=\"\n                showAllDynamicButtons ? 'fas fa-compress' : 'fas fa-th-large'\n              \"\n              :text=\"\n                showAllDynamicButtons\n                  ? 'dynamicButtons.show_less_dynamic'\n                  : 'dynamicButtons.show_all_dynamic'\n              \"\n              :settings=\"settings\"\n              :subtext=\"\n                showAllDynamicButtons\n                  ? 'dynamicButtons.show_less_subtext'\n                  : 'dynamicButtons.show_all_subtext'\n              \"\n              :isDynamic=\"true\"\n              :isMobile=\"true\"\n              :isShowAll=\"true\"\n              :isXs=\"true\"\n              @click=\"toggleShowAll\"\n            ></qrcdr-button>\n          </v-col>\n        </v-row>\n      </div>\n\n      <div class=\"preview-area\" ref=\"createButton\">\n        <div class=\"phone-frame\">\n          <template v-if=\"selectedButton.image\">\n            <img\n              class=\"inner-image\"\n              :src=\"selectedButton.image\"\n              @error=\"selectedButton.image = ''\"\n              alt=\"\"\n            />\n          </template>\n          <template v-else>\n            <div class=\"alt-placeholder\">\n              {{ $t(\"inner_image_alt\") }}\n            </div>\n          </template>\n\n          <img\n            class=\"phoneFrame\"\n            :src=\"frameImage\"\n            :alt=\"$t('phone_frame_alt')\"\n          />\n        </div>\n\n        <div\n          v-if=\"selectedButton.text && !$vuetify.breakpoint.smAndDown\"\n          class=\"text-area\"\n        >\n          <div class=\"text-title\">\n            <span>{{ $t(\"create_qr_code\", [$t(selectedButton.text)]) }}</span>\n          </div>\n          <div\n            class=\"justified-text\"\n            v-html=\"\n              formatDoc($t(selectedButton.doc) || $t(selectedButton.text))\n            \"\n          ></div>\n          <v-btn\n            class=\"action-button\"\n            :color=\"selectedButton.color1\"\n            dark\n            @click=\"createAction\"\n          >\n            {{ $t(\"create_qr_code\", [$t(selectedButton.text)]) }}\n          </v-btn>\n          <v-btn\n            class=\"action-button mx-8\"\n            :color=\"selectedButton.color2\"\n            dark\n            @click=\"createAction2\"\n          >\n            {{ $t(\"create_qr_code2\", [$t(selectedButton.text2)]) }}\n          </v-btn>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div\n      v-if=\"showDetailsPanel && !$vuetify.breakpoint.smAndDown\"\n      class=\"details-panel\"\n      :style=\"{\n        bottom: 0,\n        left: 0,\n        width: '100%',\n        height: settings.detailsPanelHeight || '200px',\n        background: settings.detailsPanelBgColor || 'white',\n        color: settings.detailsPanelTextColor || '#403199',\n        padding: settings.detailsPanelPadding || '20px',\n        borderTopLeftRadius: settings.detailsPanelBorderRadius || '15px',\n        borderTopRightRadius: settings.detailsPanelBorderRadius || '15px',\n        transform: showDetailsPanel ? 'translateY(0)' : 'translateY(100%)',\n        transition: 'transform 0.3s ease',\n      }\"\n    >\n      <div class=\"panel-content\" >\n        <div style=\"font-size: 14px; margin-bottom: 16px\">\n          {{ $t(\"button_description\", [$t(selectedButton.text)]) }}\n        </div>\n        <div\n          style=\"\n            font-size: 14px;\n            line-height: 1.6;\n            margin: 0 16px;\n            max-height: 420px;\n            overflow-y: auto;\n          \"\n          v-html=\"formatDoc($t(selectedButton.doc) || $t(selectedButton.text))\"\n        ></div>\n        <v-btn\n          class=\"action-button\"\n          color=\"#E91E63\"\n          dark\n          @click=\"createAction\"\n          style=\"margin-top: 16px\"\n        >\n          {{ $t(\"create_button\", [$t(selectedButton.text)]) }}\n        </v-btn>\n        <v-btn\n          class=\"action-button mx-8\"\n          color=\"#E91E63\"\n          dark\n          @click=\"createAction\"\n          style=\"margin-top: 16px\"\n        >\n          {{ $t(\"create_button\", [$t(selectedButton.text)]) }}\n        </v-btn>\n      </div>\n    </div>\n -->\n    <!-- v-bottom-sheet for mobile -->\n    <v-bottom-sheet\n      v-model=\"sheet\"\n      width=\"100%\"\n      v-if=\"$vuetify.breakpoint.smAndDown && selectedButton.text\"\n    >\n      <template v-slot:activator=\"{ on, attrs }\">\n        <v-btn\n          ref=\"templatePhone\"\n          class=\"nav-button\"\n          :class=\"{ active: sheet }\"\n          v-bind=\"attrs\"\n          v-on=\"on\"\n        >\n          <i class=\"fa fa-angle-double-up\"></i>\n          {{ $t(\"button_details\", [$t(selectedButton.text)]) }}\n          <i class=\"fa fa-angle-double-up\"></i>\n        </v-btn>\n        <v-btn\n          class=\"action-button mx-8\"\n          :color=\"selectedButton.color1\"\n          dark\n          @click=\"createAction\"\n          style=\"margin-top: 16px\"\n        >\n          {{ $t(\"create_button\", [$t(selectedButton.text)]) }}\n        </v-btn>\n      </template>\n      <v-sheet\n        class=\"sheet-content\"\n        :style=\"{\n          padding: settings.sheetContentPadding || '25px',\n          backgroundColor: settings.detailsPanelBgColor || 'white',\n          color: settings.detailsPanelTextColor || 'black',\n          fontSize: '13px',\n          lineHeight: 2.5,\n          overflow: 'auto',\n          maxHeight: '100% !important',\n        }\"\n      >\n        <v-btn class=\"mt-6 btn-sheet\" @click=\"sheet = !sheet\" icon>\n          <i class=\"fa fa-angle-double-down\"></i>\n        </v-btn>\n        <div class=\"sheet-text\">\n          <div class=\"preview-area\" ref=\"createButton\">\n            <div class=\"phone-frame\">\n              <template v-if=\"selectedButton.image\">\n                <img\n                  class=\"inner-image\"\n                  :src=\"selectedButton.image\"\n                  @error=\"selectedButton.image = ''\"\n                  alt=\"\"\n                />\n              </template>\n              <template v-else>\n                <div class=\"alt-placeholder\">\n                  {{ $t(\"inner_image_alt\") }}\n                </div>\n              </template>\n            </div>\n            <div\n              v-if=\"selectedButton.text && !$vuetify.breakpoint.smAndDown\"\n              class=\"text-area\"\n            >\n              <div class=\"text-title\">\n                <span>{{\n                  $t(\"create_qr_code\", [$t(selectedButton.text)])\n                }}</span>\n              </div>\n              <div\n                class=\"justified-text\"\n                v-html=\"\n                  formatDoc($t(selectedButton.doc) || $t(selectedButton.text))\n                \"\n              ></div>\n              <v-btn\n                class=\"action-button\"\n                :color=\"selectedButton.color1\"\n                dark\n                @click=\"createAction\"\n              >\n                {{ $t(\"create_qr_code\", [$t(selectedButton.text)]) }}\n              </v-btn>\n              <v-btn\n                class=\"action-button\"\n                :color=\"selectedButton.color2\"\n                dark\n                @click=\"createAction2\"\n              >\n                {{ $t(\"create_qr_code2\", [$t(selectedButton.text2)]) }}\n              </v-btn>\n            </div>\n          </div>\n          <div style=\"font-size: 14px; margin-bottom: 16px\">\n            {{ $t(\"button_details_title\", [$t(selectedButton.text)]) }}\n          </div>\n          <div\n            style=\"\n              font-size: 14px;\n              line-height: 1.6;\n              margin: 0 16px;\n              max-height: 60vh;\n              overflow-y: auto;\n            \"\n            v-html=\"\n              formatDoc($t(selectedButton.doc) || $t(selectedButton.text))\n            \"\n          ></div>\n          <v-btn\n            class=\"action-button\"\n            :color=\"selectedButton.color1\"\n            dark\n            @click=\"createAction\"\n            style=\"margin-top: 16px\"\n          >\n            {{ $t(\"create_button\", [$t(selectedButton.text)]) }}\n          </v-btn>\n        </div>\n      </v-sheet>\n    </v-bottom-sheet>\n  </div>\n</template>\n\n<script>\nimport QrcdrButton from \"./QrcdrButton.vue\";\nimport { EventBus } from \"./eventBus\";\n\nexport default {\n  name: \"DynamicTab\",\n  props: {\n    settings: {\n      type: Object,\n      required: true,\n      default: () => ({\n        dynamicButtons: [],\n        defaultImage: \"https://via.placeholder.com/150\",\n        defaultDoc: \"\",\n        frameImage: \"img/cell.png\",\n      }),\n    },\n  },\n  components: { QrcdrButton },\n  data() {\n    return {\n      frameImage: \"img/cell.png\",\n      dynamicButtons: [],\n      showDetailsPanel: false,\n      selectedButton: {},\n      sheet: false,\n      showAllDynamicButtons: false,\n    };\n  },\n  computed: {\n    isMobileBreakpoint() {\n      // Enable show all button for 768px to 960px as well\n      return (\n        this.$vuetify.breakpoint.smAndDown ||\n        (this.$vuetify.breakpoint.md && this.$vuetify.breakpoint.width <= 960)\n      );\n    },\n    isXsBreakpoint() {\n      return this.$vuetify.breakpoint.xs;\n    },\n    visibleDynamicButtons() {\n      if (!this.dynamicButtons || !Array.isArray(this.dynamicButtons)) {\n        console.warn(\"dynamicButtons is not defined or not an array\");\n        return [];\n      }\n      console.log(\n        \"isXsBreakpoint:\",\n        this.isXsBreakpoint,\n        \"showAllDynamicButtons:\",\n        this.showAllDynamicButtons,\n        \"dynamicButtons:\",\n        this.dynamicButtons\n      );\n      if (!this.showAllDynamicButtons && this.isMobileBreakpoint) {\n        if (this.isXsBreakpoint) return this.dynamicButtons.slice(0, 4);\n        else return this.dynamicButtons.slice(0, 6);\n      }\n      return this.dynamicButtons;\n    },\n  },\n  watch: {\n    \"settings.dynamicButtons\": {\n      handler(newButtons) {\n        this.dynamicButtons = newButtons.map((button) => ({\n          ...button,\n          image:\n            button.image ||\n            this.settings.defaultImage ||\n            \"https://via.placeholder.com/150\",\n          doc: button.doc || this.settings.defaultDoc || this.$t(\"defaultDoc\"),\n          frameImage: button.frameImage || this.settings.frameImage,\n          subtext: button.subtext || this.$t(\"defaultSubtext\"),\n          link1: button.link1 || \"\",\n          link2: button.link2 || \"#\",\n        }));\n      },\n      immediate: true,\n      deep: true,\n    },\n    \"$vuetify.breakpoint.smOnly\"(isMobile) {\n      if (!isMobile) {\n        this.sheet = false;\n        this.showDetailsPanel = true;\n      }\n    },\n    \"$vuetify.breakpoint.xsOnly\"(isMobile) {\n      if (!isMobile) {\n        this.sheet = false;\n        this.showDetailsPanel = true;\n      }\n    },\n  },\n  methods: {\n    getCols() {\n      if (this.$vuetify.breakpoint.xs) {\n        return 6; // 2 buttons per row\n      } else if (this.$vuetify.breakpoint.sm) {\n        return 4; // 3 buttons per row\n      } else {\n        return 3; // 4 buttons per row\n      }\n    },\n    toggleShowAll() {\n      this.showAllDynamicButtons = !this.showAllDynamicButtons;\n      console.log(\n        \"Toggled showAllDynamicButtons to:\",\n        this.showAllDynamicButtons\n      );\n    },\n    showDetails(button) {\n      this.selectedButton = button;\n      this.showDetailsPanel = false;\n      EventBus.$emit(\"updateTopTitle\", this.selectedButton.text);\n\n      if (this.$vuetify.breakpoint.smAndDown) {\n        this.sheet = true; // Open v-bottom-sheet for mobile\n        this.showDetailsPanel = true; // If details-panel is also shown\n\n        this.$nextTick(() => {\n          const image = this.$refs.templatePhone;\n          if (image) {\n            // Get phone-frame position\n            const rect = image.getBoundingClientRect();\n            const scrollTop =\n              window.pageYOffset || document.documentElement.scrollTop;\n            const targetY = rect.top + scrollTop + rect.height + 10; // 10 pixels below the end of phone-frame\n            window.scrollTo({\n              top: targetY,\n              behavior: \"smooth\",\n            });\n          }\n        });\n      } else {\n        this.showDetailsPanel = true;\n        const createButton = this.$refs.createButton;\n        if (createButton) {\n          createButton.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"center\",\n            inline: \"nearest\",\n          });\n        }\n      }\n    },\n    formatDoc(doc) {\n      if (!doc) return \"\";\n      return doc.replace(/\\n/g, \"<br>\").replace(/\\n+/g, \" \").trim();\n    },\n    createAction() {\n      if (this.selectedButton.link1) {\n        window.location.href = this.selectedButton.link1;\n      }\n    },\n    createAction2() {\n      if (this.selectedButton.link2) {\n        this.$router.push({\n          path: this.selectedButton.link2,\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Existing styles remain unchanged */\n.dynamic-tab {\n  text-align: center;\n  padding: 20px;\n}\n\n.content-wrapper {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 30px;\n  align-items: flex-start;\n}\n\n.dynamic-buttons-grid {\n  width: 100%;\n  padding: 20px;\n}\n\n.button-col {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n}\n\n.show-all-button-col {\n  flex: 0 0 auto; /* Prevent shrinking */\n  width: 100%; /* Take full width */\n  max-width: 100%;\n  margin-right: 0%;\n  margin-left: 0%;\n}\n\n.preview-area {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 45px;\n  direction: rtl;\n}\n\n.text-area {\n  width: 75%;\n  text-align: right;\n  color: #333;\n  font-size: 14px;\n  line-height: 1.6;\n  margin: 0 20px;\n}\n\n.phone-frame {\n  width: 250px;\n  height: 500px;\n  background: transparent;\n  border-radius: 45px;\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\n}\n\n.details-panel {\n  z-index: 100;\n}\n\n.panel-content {\n  text-align: center;\n  justify-content: flex-end;\n  direction: rtl;\n  font-size: 13px;\n  line-height: 2.5;\n}\n\n.bottom-nav {\n  z-index: 1000;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background-color: #403199 !important;\n  height: 45px;\n  display: flex;\n  justify-self: center;\n  align-items: center;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.2);\n  text-align: center;\n}\n\n.nav-button {\n  margin-top: 20px;\n  background-color: #403199 !important;\n  border-radius: 12px;\n  padding: 0 16px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-size: 14px;\n  justify-self: center;\n  text-align: center;\n  transition: transform 0.3s ease, background 0.3s ease;\n  gap: 8px;\n}\n\n.nav-button i {\n  font-size: 16px;\n  color: white;\n  display: inline-block;\n  transition: transform 0.3s ease;\n}\n\n.nav-button.active {\n  transform: scale(1.05);\n  background-color: #5e4db2;\n}\n\n.nav-button.active i {\n  transform: rotate(180deg);\n}\n\n/* RTL support for navigation button */\n[dir=\"rtl\"] .nav-button {\n  flex-direction: row-reverse;\n}\n\n[dir=\"rtl\"] .nav-button i {\n  transform: scaleX(-1);\n}\n\n[dir=\"rtl\"] .nav-button.active i {\n  transform: scaleX(-1) rotate(180deg);\n}\n\n.sheet-content {\n  background-color: white !important;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);\n  height: 100% !important;\n  width: 100% !important;\n}\n\n:deep(.v-bottom-sheet.v-dialog) {\n  height: 100% !important;\n  width: 99% !important;\n  max-height: 99.9% !important;\n}\n\n.sheet-text {\n  text-align: right;\n  direction: rtl;\n  font-size: 13px;\n  line-height: 2.5;\n  padding-top: 100px !important;\n  padding-left: 20px !important;\n  padding-right: 20px !important;\n}\n\n.action-button {\n  border-radius: 8px;\n  font-size: 14px;\n  padding: 8px 16px;\n  margin-top: 40px;\n}\n\n.inner-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 240px;\n  height: 480px;\n  object-fit: cover;\n  border-radius: 15px;\n}\n\n.phoneFrame {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 2;\n}\n\n.justified-text {\n  text-align: justify;\n  line-height: 2.5;\n  font-size: 13px;\n  direction: rtl;\n}\n\n.text-title {\n  border-radius: 15px;\n  background-color: v-bind(\"settings.topBgColor\");\n  margin-bottom: 45px;\n  width: max-content;\n  padding: 15px;\n}\n[dir=\"rtl\"] .btn-sheet .fa {\n  background-image: linear-gradient(to top, #403199, #e9354d); /* معکوس */\n}\n.btn-sheet {\n  background: transparent !important;\n  box-shadow: none !important;\n  position: absolute;\n  overflow: visible;\n  width: 60px;\n  height: 60px;\n  top: 10px;\n  left: 50%;\n  transform: translateX(-50%);\n}\n.btn-sheet .fa {\n  font-size: 43px !important;\n  color: transparent !important;\n  -webkit-background-clip: text;\n  background-clip: text;\n  background-image: linear-gradient(to top, #e9354d, #403199);\n  transition: all 0.3s ease;\n  display: inline-block;\n}\n\n.btn-sheet:hover .fa,\n.btn-sheet.active .fa {\n  font-size: 46px !important;\n  background-image: linear-gradient(to bottom, #e9354d, #403199);\n  -webkit-background-clip: text;\n  background-clip: text;\n  animation: gradientAnimation 1.5s ease infinite;\n}\n\n/* RTL support for sheet button */\n/* [dir=\"rtl\"] .btn-sheet .fa {\n  font-size: 43px !important;\n  color: transparent !important;\n  -webkit-background-clip: text;\n  background-clip: text;\n  background-image: linear-gradient(to top, #e9354d, #403199);\n  transition: all 0.3s ease;\n  display: inline-block; */\n/* transform: scaleX(-1); */\n/* }\n\n[dir=\"rtl\"] .btn-sheet:hover .fa,\n[dir=\"rtl\"] .btn-sheet.active .fa {\n  transform: scaleX(-1);\n} */\n\n@keyframes gradientAnimation {\n  0% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .content-wrapper {\n    flex-direction: column;\n  }\n\n  .preview-area {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .phone-frame {\n    width: 250px;\n    height: 500px;\n    background: transparent;\n    border-radius: 45px;\n  }\n\n  .text-area {\n    display: none;\n  }\n\n  .dynamic-buttons-grid {\n    padding-right: 20px;\n    padding-left: 20px;\n    padding-bottom: 20px;\n  }\n\n  .button-col {\n    padding-right: 40px;\n    padding-left: 40px;\n    padding-bottom: 40px;\n  }\n\n  ::deep(.v-row) {\n    gap: 40px !important;\n    row-gap: 40px !important;\n    margin: 0 !important;\n    display: flex !important;\n    flex-wrap: wrap !important;\n  }\n\n  ::deep(.v-col) {\n    padding: 0 !important;\n  }\n}\n\n/* 430px and below: 2 columns with 31px gap */\n@media (max-width: 430px) {\n  .dynamic-tab {\n    padding-right: 0px;\n    padding-left: 0px;\n    row-gap: 31px;\n  }\n\n  .dynamic-buttons-grid {\n    gap: 31px;\n    padding-right: 0px;\n  }\n\n  ::deep(.v-row) {\n    gap: 31px !important;\n    row-gap: 31px !important;\n    margin: 0 !important;\n    display: flex !important;\n    flex-wrap: wrap !important;\n  }\n\n  ::deep(.v-col) {\n    padding: 0 !important;\n  }\n}\n\n@media (max-width: 425px) {\n  .dynamic-tab {\n    padding-right: 0px;\n    padding-left: 0px;\n    row-gap: 31px !important;\n  }\n\n  .dynamic-buttons-grid {\n    gap: 31px !important;\n    padding-right: 0px;\n  }\n\n  ::deep(.v-row) {\n    gap: 31px !important;\n    row-gap: 31px !important;\n    margin: 0 !important;\n    display: flex !important;\n    flex-wrap: wrap !important;\n  }\n\n  ::deep(.v-col) {\n    padding: 0 !important;\n  }\n}\n\n/* Very small mobile devices (344px and below) */\n@media (max-width: 344px) {\n  .dynamic-tab {\n    padding-right: 0px;\n    padding-left: 0px;\n    padding-top: 0px !important;\n    row-gap: 31px !important;\n  }\n\n  .dynamic-buttons-grid {\n    gap: 31px !important;\n    padding-right: 0px;\n    padding-left: 0px;\n  }\n\n  .button-col {\n    padding: 25px !important;\n  }\n  .button-col-showall {\n    padding: 8px !important;\n  }\n\n  ::deep(.v-row) {\n    gap: 31px !important;\n    row-gap: 31px !important;\n    margin: 0 !important;\n    display: flex !important;\n    flex-wrap: wrap !important;\n  }\n\n  ::deep(.v-col) {\n    padding: 0 !important;\n  }\n}\n\n/* Desktop gaps: column = 98px, row = 88px */\n@media (min-width: 1024px) {\n  .dynamic-buttons-grid {\n    padding: 8px;\n  }\n\n  .button-col {\n    padding: 25px;\n  }\n\n  ::deep(.v-row) {\n    gap: 98px !important;\n    row-gap: 88px !important;\n    margin: 0 !important;\n    display: flex !important;\n    flex-wrap: wrap !important;\n  }\n\n  ::deep(.v-col) {\n    padding: 0 !important;\n  }\n}\n\n/* Tablet gaps: column = 98px, row = 88px */\n@media (min-width: 769px) and (max-width: 1023px) {\n  .dynamic-buttons-grid {\n    padding: 20px;\n  }\n\n  .button-col {\n    padding: 10px;\n  }\n\n  ::deep(.v-row) {\n    gap: 98px !important;\n    row-gap: 88px !important;\n    margin: 0 !important;\n    display: flex !important;\n    flex-wrap: wrap !important;\n  }\n\n  ::deep(.v-col) {\n    padding: 0 !important;\n  }\n}\n\n/* Vuetify grid responsive overrides */\n::deep(.v-row) {\n  margin: 0 !important;\n  display: flex !important;\n  flex-wrap: wrap !important;\n  gap: 0 !important;\n  row-gap: 0 !important;\n}\n\n::deep(.v-col) {\n  padding: 0 !important;\n  margin: 0 !important;\n}\n\n::deep(.v-col .snake-border-button) {\n  width: 100% !important;\n  max-width: 100% !important;\n}\n\n::deep(.dynamic-buttons-grid .v-row) {\n  margin: 0 !important;\n  display: flex !important;\n  flex-wrap: wrap !important;\n}\n\n:deep(.dynamic-buttons-grid .v-col) {\n  padding: 0 !important;\n  margin: 0 !important;\n}\n\n@media (max-width: 768px) {\n  ::deep(.dynamic-buttons-grid .v-row) {\n    gap: 40px !important;\n    row-gap: 40px !important;\n  }\n}\n\n@media (max-width: 430px) {\n  ::deep(.dynamic-buttons-grid .v-row) {\n    gap: 31px !important;\n    row-gap: 31px !important;\n  }\n}\n\n@media (max-width: 425px) {\n  ::deep(.dynamic-buttons-grid .v-row) {\n    gap: 31px !important;\n    row-gap: 31px !important;\n  }\n}\n\n@media (max-width: 344px) {\n  ::deep(.dynamic-buttons-grid .v-row) {\n    gap: 31px !important;\n    row-gap: 31px !important;\n  }\n}\n\n@media (min-width: 769px) {\n  ::deep(.dynamic-buttons-grid .v-row) {\n    gap: 98px !important;\n    row-gap: 88px !important;\n  }\n}\n\n/* Show All Button specific styles */\n.snake-border-button.show-all-button {\n  flex-direction: row !important;\n  justify-content: space-between !important;\n  align-items: center !important;\n  width: 100% !important;\n  max-width: 100% !important;\n}\n\n.snake-border-button.show-all-button .show-all-icon {\n  order: 2; /* آیکون بعد از متن */\n}\n\n.snake-border-button.show-all-button .show-all-text {\n  order: 1; /* متن قبل از آیکون */\n  flex: 1;\n  text-align: center !important;\n}\n\n.snake-border-button.show-all-button .line1 {\n  text-align: center !important;\n  width: 100% !important;\n  min-width: auto !important;\n}\n\n/* Tablet responsive for show all button (768px تا 960px) */\n@media (min-width: 768px) and (max-width: 960px) {\n  .snake-border-button.show-all-button {\n    width: 100% !important;\n    max-width: 100% !important;\n    flex-direction: row !important;\n    justify-content: space-between !important;\n    align-items: center !important;\n  }\n\n  .snake-border-button.show-all-button .show-all-icon {\n    order: 2 !important;\n    margin-left: 15px !important;\n  }\n\n  .snake-border-button.show-all-button .show-all-text {\n    order: 1 !important;\n  }\n}\n.alt-placeholder {\n  width: 250px;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  font-family: inherit;\n  color: var(primary);\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  padding: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}