{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nexport default {\n  name: \"LanguageSwitcher\",\n  props: {\n    defaultLanguage: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      availableLanguages: [{\n        code: \"fa\",\n        name: this.$t(\"language.farsi\"),\n        icon: \"ir\"\n      }, {\n        code: \"en\",\n        name: this.$t(\"language.english\"),\n        icon: \"gb\"\n      }, {\n        code: \"ar\",\n        name: this.$t(\"language.arabic\"),\n        icon: \"sa\"\n      }, {\n        code: \"tr\",\n        name: this.$t(\"language.turkish\"),\n        icon: \"tr\"\n      }, {\n        code: \"ru\",\n        name: this.$t(\"language.russian\"),\n        icon: \"ru\"\n      }, {\n        code: \"fr\",\n        name: this.$t(\"language.french\"),\n        icon: \"fr\"\n      }, {\n        code: \"de\",\n        name: this.$t(\"language.german\"),\n        icon: \"de\"\n      }]\n    };\n  },\n  computed: {\n    currentLanguage() {\n      return this.$i18n.locale;\n    },\n    currentLanguageIcon() {\n      const lang = this.availableLanguages.find(l => l.code === this.currentLanguage);\n      return lang ? lang.icon : \"ir\";\n    },\n    currentLanguageIconName() {\n      const lang = this.availableLanguages.find(l => l.code === this.currentLanguage);\n      return lang ? lang.name : this.$t(\"language.farsi\");\n    }\n  },\n  methods: {\n    selectLanguage(lang) {\n      switch (lang) {\n        case \"fa\":\n          return {\n            Icon: \"ir\",\n            Name: this.$t(\"language.farsi\")\n          };\n        case \"en\":\n          return {\n            Icon: \"gb\",\n            Name: this.$t(\"language.english\")\n          };\n        case \"ru\":\n          return {\n            Icon: \"ru\",\n            Name: this.$t(\"language.russian\")\n          };\n        case \"tr\":\n          return {\n            Icon: \"tr\",\n            Name: this.$t(\"language.turkish\")\n          };\n        case \"ar\":\n          return {\n            Icon: \"sa\",\n            Name: this.$t(\"language.arabic\")\n          };\n        case \"fr\":\n          return {\n            Icon: \"fr\",\n            Name: this.$t(\"language.french\")\n          };\n        case \"de\":\n          return {\n            Icon: \"de\",\n            Name: this.$t(\"language.german\")\n          };\n      }\n    },\n    changeLanguage(langCode) {\n      this.$i18n.locale = langCode;\n      localStorage.setItem(\"preferred-language\", langCode);\n      if (langCode === \"fa\" || langCode === \"ar\") {\n        document.documentElement.setAttribute(\"dir\", \"rtl\");\n        document.documentElement.setAttribute(\"lang\", langCode);\n      } else {\n        document.documentElement.setAttribute(\"dir\", \"ltr\");\n        document.documentElement.setAttribute(\"lang\", langCode);\n      }\n      this.$emit(\"language-changed\", langCode);\n    },\n    setInitialLanguage() {\n      let initialLang = this.defaultLanguage;\n      if (!initialLang) {\n        initialLang = localStorage.getItem(\"preferred-language\");\n      }\n      const validLang = this.availableLanguages.find(lang => lang.code == initialLang)?.code;\n      if (validLang) {\n        this.$i18n.locale = validLang;\n        localStorage.setItem(\"preferred-language\", validLang);\n        if (validLang === \"fa\" || validLang === \"ar\") {\n          document.documentElement.setAttribute(\"dir\", \"rtl\");\n          document.documentElement.setAttribute(\"lang\", validLang);\n        } else {\n          document.documentElement.setAttribute(\"dir\", \"ltr\");\n          document.documentElement.setAttribute(\"lang\", validLang);\n        }\n      }\n    }\n  },\n  mounted() {\n    this.setInitialLanguage();\n  }\n};","map":{"version":3,"names":["name","props","defaultLanguage","type","String","default","data","availableLanguages","code","$t","icon","computed","currentLanguage","$i18n","locale","currentLanguageIcon","lang","find","l","currentLanguageIconName","methods","selectLanguage","Icon","Name","changeLanguage","langCode","localStorage","setItem","document","documentElement","setAttribute","$emit","setInitialLanguage","initialLang","getItem","validLang","mounted"],"sources":["src/components/LanguageSwitcher.vue"],"sourcesContent":["<template>\r\n  <div class=\"language-switcher\">\r\n    <v-menu offset-y>\r\n      <template v-slot:activator=\"{ on, attrs }\">\r\n        <v-btn icon v-bind=\"attrs\" v-on=\"on\" class=\"language-btn\">\r\n          <flag :iso=\"currentLanguageIcon\" :title=\"currentLanguageIconName\" />\r\n        </v-btn>\r\n      </template>\r\n      <v-list>\r\n        <v-list-item\r\n          v-for=\"lang in availableLanguages\"\r\n          :key=\"lang.code\"\r\n          @click=\"changeLanguage(lang.code)\"\r\n          :class=\"{ 'active-language': currentLanguage === lang.code }\"\r\n        >\r\n          <v-list-item-icon>\r\n            <flag\r\n              :iso=\"selectLanguage(lang.code).Icon\"\r\n              :title=\"selectLanguage(lang.code).Name\"\r\n            />\r\n          </v-list-item-icon>\r\n          <v-list-item-content>\r\n            <v-list-item-title>{{ lang.name }}</v-list-item-title>\r\n          </v-list-item-content>\r\n        </v-list-item>\r\n      </v-list>\r\n    </v-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"LanguageSwitcher\",\r\n  props: {\r\n    defaultLanguage: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      availableLanguages: [\r\n        {\r\n          code: \"fa\",\r\n          name: this.$t(\"language.farsi\"),\r\n          icon: \"ir\",\r\n        },\r\n        {\r\n          code: \"en\",\r\n          name: this.$t(\"language.english\"),\r\n          icon: \"gb\",\r\n        },\r\n        {\r\n          code: \"ar\",\r\n          name: this.$t(\"language.arabic\"),\r\n          icon: \"sa\",\r\n        },\r\n        {\r\n          code: \"tr\",\r\n          name: this.$t(\"language.turkish\"),\r\n          icon: \"tr\",\r\n        },\r\n        {\r\n          code: \"ru\",\r\n          name: this.$t(\"language.russian\"),\r\n          icon: \"ru\",\r\n        },\r\n        {\r\n          code: \"fr\",\r\n          name: this.$t(\"language.french\"),\r\n          icon: \"fr\",\r\n        },\r\n        {\r\n          code: \"de\",\r\n          name: this.$t(\"language.german\"),\r\n          icon: \"de\",\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    currentLanguage() {\r\n      return this.$i18n.locale;\r\n    },\r\n    currentLanguageIcon() {\r\n      const lang = this.availableLanguages.find(\r\n        (l) => l.code === this.currentLanguage\r\n      );\r\n      return lang ? lang.icon : \"ir\";\r\n    },\r\n    currentLanguageIconName() {\r\n      const lang = this.availableLanguages.find(\r\n        (l) => l.code === this.currentLanguage\r\n      );\r\n      return lang ? lang.name : this.$t(\"language.farsi\");\r\n    },\r\n  },\r\n  methods: {\r\n    selectLanguage(lang) {\r\n      switch (lang) {\r\n        case \"fa\":\r\n          return {\r\n            Icon: \"ir\",\r\n            Name: this.$t(\"language.farsi\"),\r\n          };\r\n        case \"en\":\r\n          return {\r\n            Icon: \"gb\",\r\n            Name: this.$t(\"language.english\"),\r\n          };\r\n        case \"ru\":\r\n          return {\r\n            Icon: \"ru\",\r\n            Name: this.$t(\"language.russian\"),\r\n          };\r\n        case \"tr\":\r\n          return {\r\n            Icon: \"tr\",\r\n            Name: this.$t(\"language.turkish\"),\r\n          };\r\n        case \"ar\":\r\n          return {\r\n            Icon: \"sa\",\r\n            Name: this.$t(\"language.arabic\"),\r\n          };\r\n        case \"fr\":\r\n          return {\r\n            Icon: \"fr\",\r\n            Name: this.$t(\"language.french\"),\r\n          };\r\n        case \"de\":\r\n          return {\r\n            Icon: \"de\",\r\n            Name: this.$t(\"language.german\"),\r\n          };\r\n      }\r\n    },\r\n    changeLanguage(langCode) {\r\n      this.$i18n.locale = langCode;\r\n      localStorage.setItem(\"preferred-language\", langCode);\r\n\r\n      if (langCode === \"fa\" || langCode === \"ar\") {\r\n        document.documentElement.setAttribute(\"dir\", \"rtl\");\r\n        document.documentElement.setAttribute(\"lang\", langCode);\r\n      } else {\r\n        document.documentElement.setAttribute(\"dir\", \"ltr\");\r\n        document.documentElement.setAttribute(\"lang\", langCode);\r\n      }\r\n\r\n      this.$emit(\"language-changed\", langCode);\r\n    },\r\n    setInitialLanguage() {\r\n      let initialLang = this.defaultLanguage;\r\n      if (!initialLang) {\r\n        initialLang = localStorage.getItem(\"preferred-language\");\r\n      }\r\n      const validLang = this.availableLanguages.find(\r\n        (lang) => lang.code == initialLang\r\n      )?.code;\r\n      if (validLang) {\r\n        this.$i18n.locale = validLang;\r\n        localStorage.setItem(\"preferred-language\", validLang);\r\n        if (validLang === \"fa\" || validLang === \"ar\") {\r\n          document.documentElement.setAttribute(\"dir\", \"rtl\");\r\n          document.documentElement.setAttribute(\"lang\", validLang);\r\n        } else {\r\n          document.documentElement.setAttribute(\"dir\", \"ltr\");\r\n          document.documentElement.setAttribute(\"lang\", validLang);\r\n        }\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.setInitialLanguage();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.language-switcher {\r\n  position: fixed;\r\n  top: 20px;\r\n  left: 20px;\r\n  z-index: 1000;\r\n}\r\n\r\n.language-btn {\r\n  background-color: rgba(255, 255, 255, 0.9) !important;\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.active-language {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n/* [dir=\"rtl\"] .language-switcher { */\r\n/* right: auto; */\r\n/* left: 20px; */\r\n/* } */\r\n\r\n/* Tablet */\r\n@media (max-width: 768px) {\r\n  .language-switcher {\r\n    top: 15px;\r\n    left: 15px;\r\n  }\r\n\r\n  /* [dir=\"rtl\"] .language-switcher { */\r\n  /* right: auto; */\r\n  /* left: 15px; */\r\n  /* } */\r\n\r\n  .language-btn {\r\n    width: 40px !important;\r\n    height: 40px !important;\r\n    min-width: 40px !important;\r\n    padding: 0 !important;\r\n  }\r\n}\r\n\r\n/* Mobile */\r\n@media (max-width: 480px) {\r\n  .language-switcher {\r\n    top: 10px;\r\n    left: 10px;\r\n  }\r\n\r\n  /* [dir=\"rtl\"] .language-switcher { */\r\n  /* right: auto; */\r\n  /* left: 10px; */\r\n  /* } */\r\n\r\n  .language-btn {\r\n    width: 35px !important;\r\n    height: 35px !important;\r\n    padding: 0 !important;\r\n    min-width: 35px !important;\r\n  }\r\n}\r\n\r\n/* Small mobile */\r\n@media (max-width: 360px) {\r\n  .language-switcher {\r\n    top: 8px;\r\n    left: 8px;\r\n  }\r\n\r\n  /* [dir=\"rtl\"] .language-switcher { */\r\n  /* right: auto;\r\n    left: 8px; */\r\n  /* } */\r\n\r\n  .language-btn {\r\n    width: 32px !important;\r\n    height: 32px !important;\r\n    min-width: 32px !important;\r\n    padding: 0 !important;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}